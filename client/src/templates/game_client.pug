doctype html
html(lang='en')
    head
        meta(charset='utf-8')
        meta(name='viewport' content='width=device-width, initial-scale=1, minimum-scale=1,maximum-scale=1')
        meta(name="description" content=description)

        title= title

        include ./head_common.pug

        style.
            html, body {margin: 0; height: 100%; overflow: hidden}

            #page-wrapper {
                position: relative;
                z-index: 0;
            }
            #webgl-wrapper {
                position: absolute;
                z-index: 1;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
            }
            #loader_symbols {
                display: block;
                position:absolute;
                top:0;
                left:0;
                z-index: 2;
            }
            h1#loadingSign {
                color: #dedede;
                display: flex;
                position: absolute;
                z-index: 2;
                bottom: 1rem;
                right: 2rem;
            }
            h1#loadingSign div {
                display: inline-block;
                font-family: monospace;
                font-size: 2.5rem;
                padding: 1rem 2.5rem 1rem 0;
            }
            h1#loadingSign img {
                height: 5rem;
                width: 5rem;
            }

            body {
                background-color: #000;
                margin: 0;
                padding: 0;
            }
            #webgl {
                opacity: 0;
                width: 100%;
                height: 100%;
                position: absolute;
                top: 0;
                left: 0;
                display: block;
            }
            .tp-dfwv {
                z-index: 1;
            }

            #preview_materials {
                display: none;
                background: rgba(0,0,0,0.8);
                position: absolute;
                width: 100%;
                height: 25%;
                overflow-y: auto;
                z-index: 2;
                bottom: 0;
            }

            #menu_overlay {
                position: absolute;
                z-index: 3;
                display: flex;
                width: 100vw;
                height: 100vh;
                pointer-events: none;
                align-items: center;
                justify-content: center;
            }

            #menu_overlay > div {
                pointer-events: all;
            }

            #menu_overlay #main_menu .tp-rotv {
                position: absolute;
                top: 8px;
                right: 8px;
            }

            #menu_overlay #main_menu .tp-rotv-expanded {
                position: relative;
                font-size: 20px;
                --cnt-hp: var(--tp-container-horizontal-padding, 10px);
                --cnt-vp: var(--tp-container-vertical-padding, 10px);
                --cnt-usp: var(--tp-container-unit-spacing, 10px);
                --cnt-usz: var(--tp-container-unit-size, 40px);
            }

            #debugging_tools,
            #object_editor,
            #scene_overview {
                position: absolute;
            }

            #debugging_tools {
                bottom: 8px;
                right: 8px;
            }

            #object_editor {
                bottom: 8px;
                left: 8px;
            }
            #scene_overview {
                top: 8px;
                left: 8px;
            }

    body(onload="_init( 3000 );")
        noscript
            style.
                h1#loadingSign { display: none }
                #page-wrapper {
                    z-index: 2;
                }
        #menu_overlay
            #debugging_tools
            #main_menu
            #object_editor
            #scene_overview
        #webgl-wrapper
            canvas#loader_symbols
            canvas#loader_image
            video#thruster( autoplay="true" muted="muted" loop crossOrigin="anonymous" playsinline style="display:none")
                source( src="/assets/textures/thruster.mp4" type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"')
            h1#loadingSign
                div Loading
                img(src='/assets/images/tail-spin.svg' alt='Loading spinner')
            include ../templates/door_image.pug
            include ../templates/flight_instruments.pug
            div#preview_materials
                div(style='color:#FFF; margin: 1rem;') Previewing Procedural Materials
            #webgl
            // Shaders
            script(type='x-shader/x-fragment' id='brickGLSL')
                include ../shaders/common/brick.glsl
            script(type='x-shader/x-fragment' id='gradientGLSL')
                include ../shaders/common/gradient.glsl
            script(type='x-shader/x-fragment' id='normalGLSL')
                include ../shaders/common/normal.glsl
            script(type='x-shader/x-fragment' id='voronoiGLSL')
                include ../shaders/common/voronoi.glsl
            script(type='x-shader/x-vertex' id='skyVertShader')
                include ../shaders/sky.vert
            script(type='x-shader/x-fragment' id='skyFragShader')
                include ../shaders/sky.frag
            script(type='x-shader/x-vertex' id='proceduralBuildingVertShader')
                include ../shaders/proceduralBuilding.vert
            script(type='x-shader/x-fragment' id='proceduralBuildingFragShader')
                include ../shaders/proceduralBuilding.frag
            script(type='x-shader/x-vertex' id='proceduralMetalVertShader')
                include ../shaders/proceduralMetal.vert
            script(type='x-shader/x-fragment' id='proceduralMetalFragShader')
                include ../shaders/proceduralMetal.frag
            script(type='x-shader/x-vertex' id='proceduralMetal2VertShader')
                include ../shaders/proceduralMetal2.vert
            script(type='x-shader/x-fragment' id='proceduralMetal2FragShader')
                include ../shaders/proceduralMetal2.frag
            script(type='x-shader/x-vertex' id='proceduralSolarPanelVertShader')
                include ../shaders/proceduralSolarPanel.vert
            script(type='x-shader/x-fragment' id='proceduralSolarPanelFragShader')
                include ../shaders/proceduralSolarPanel.frag
            script#vertexshader(type='x-shader/x-vertex').
                varying vec2 vUv;
                void main() {
                    vUv = uv;
                    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
                }
            script#fragmentshader(type='x-shader/x-fragment').
                // Kudos to https://github.com/mrdoob/three.js/issues/14104#issuecomment-1536582334
                uniform sampler2D baseTexture;
                uniform sampler2D bloomTexture;
                varying vec2 vUv;
                void main() {
                    vec4 base_color = texture2D(baseTexture, vUv);
                    vec4 bloom_color = texture2D(bloomTexture, vUv);
                    float lum = 0.21 * bloom_color.r + 0.71 * bloom_color.g + 0.07 * bloom_color.b;
                    gl_FragColor = vec4(base_color.rgb + bloom_color.rgb, max(base_color.a, lum));
                }

            script
                include ../scripts/l.js
            script
                include ../scripts/matrix.js
            script.
                var _paq = window._paq = window._paq || [];
                /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
                _paq.push(['trackPageView']);
                _paq.push(['enableLinkTracking']);
                (function() {
                var u="https://analytics.openstudios.xyz/";
                _paq.push(['setTrackerUrl', u+'matomo.php']);
                _paq.push(['setSiteId', '9']);
                var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
                g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
                })();